{"ast":null,"code":"var _jsxFileName = \"D:\\\\app\\\\Saas\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../config/axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await axios.get('/api/auth/me');\n          setUser(response.data.data.user);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        user: userData,\n        token: authToken\n      } = response.data.data;\n      setUser(userData);\n      setToken(authToken);\n      localStorage.setItem('token', authToken);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post('/api/auth/register', userData);\n      const {\n        user: newUser,\n        token: authToken\n      } = response.data.data;\n      setUser(newUser);\n      setToken(authToken);\n      localStorage.setItem('token', authToken);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await axios.put('/api/auth/profile', profileData);\n      setUser(response.data.data.user);\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put('/api/auth/password', {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Password change failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const forgotPassword = async email => {\n    try {\n      await axios.post('/api/auth/forgot-password', {\n        email\n      });\n      toast.success('Password reset email sent!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Password reset failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const resetPassword = async (token, newPassword) => {\n    try {\n      await axios.post('/api/auth/reset-password', {\n        token,\n        newPassword\n      });\n      toast.success('Password reset successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      const message = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Password reset failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    token,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    forgotPassword,\n    resetPassword,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin',\n    isManager: (user === null || user === void 0 ? void 0 : user.role) === 'manager' || (user === null || user === void 0 ? void 0 : user.role) === 'admin'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"V8bE6DZSV5/nB2UMC4Uofie15PA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","axios","defaults","headers","common","checkAuth","response","get","data","error","console","logout","login","email","password","post","userData","authToken","setItem","success","_error$response","_error$response$data","message","register","newUser","_error$response2","_error$response2$data","removeItem","updateProfile","profileData","put","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","forgotPassword","_error$response5","_error$response5$data","resetPassword","_error$response6","_error$response6$data","value","isAuthenticated","isAdmin","role","isManager","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/app/Saas/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../config/axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  // Configure axios defaults\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [token]);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get('/api/auth/me');\r\n          setUser(response.data.data.user);\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          logout();\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      const { user: userData, token: authToken } = response.data.data;\r\n      \r\n      setUser(userData);\r\n      setToken(authToken);\r\n      localStorage.setItem('token', authToken);\r\n      \r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/register', userData);\r\n      const { user: newUser, token: authToken } = response.data.data;\r\n      \r\n      setUser(newUser);\r\n      setToken(authToken);\r\n      localStorage.setItem('token', authToken);\r\n      \r\n      toast.success('Registration successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await axios.put('/api/auth/profile', profileData);\r\n      setUser(response.data.data.user);\r\n      toast.success('Profile updated successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await axios.put('/api/auth/password', { currentPassword, newPassword });\r\n      toast.success('Password changed successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password change failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await axios.post('/api/auth/forgot-password', { email });\r\n      toast.success('Password reset email sent!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password reset failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (token, newPassword) => {\r\n    try {\r\n      await axios.post('/api/auth/reset-password', { token, newPassword });\r\n      toast.success('Password reset successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password reset failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    token,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    forgotPassword,\r\n    resetPassword,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'admin',\r\n    isManager: user?.role === 'manager' || user?.role === 'admin',\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}