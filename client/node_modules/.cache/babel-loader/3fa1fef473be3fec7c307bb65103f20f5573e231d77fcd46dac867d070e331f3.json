{"ast":null,"code":"var _jsxFileName = \"D:\\\\app\\\\Saas\\\\client\\\\src\\\\contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    user,\n    token,\n    isAuthenticated\n  } = useAuth();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [onlineUsers] = useState([]);\n  useEffect(() => {\n    if (isAuthenticated && token && !socket) {\n      const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n        auth: {\n          token: token\n        },\n        transports: ['websocket', 'polling']\n      });\n      newSocket.on('connect', () => {\n        console.log('Socket connected');\n        setConnected(true);\n\n        // Emit user online status\n        newSocket.emit('user-online');\n      });\n      newSocket.on('disconnect', () => {\n        console.log('Socket disconnected');\n        setConnected(false);\n      });\n      newSocket.on('connect_error', error => {\n        console.error('Socket connection error:', error);\n        toast.error('Connection error. Please refresh the page.');\n      });\n\n      // Task events\n      newSocket.on('task-created', data => {\n        toast.success(`${data.createdBy.name} created a new task`, {\n          duration: 3000\n        });\n      });\n      newSocket.on('task-updated', data => {\n        toast.success(`${data.updatedBy.name} updated a task`, {\n          duration: 3000\n        });\n      });\n      newSocket.on('task-deleted', data => {\n        toast.success(`${data.deletedBy.name} deleted a task`, {\n          duration: 3000\n        });\n      });\n      newSocket.on('task-moved', data => {\n        toast.success(`${data.movedBy.name} moved a task to ${data.toStatus}`, {\n          duration: 3000\n        });\n      });\n\n      // Comment events\n      newSocket.on('comment-added', data => {\n        toast.success(`${data.addedBy.name} added a comment`, {\n          duration: 3000\n        });\n      });\n\n      // File events\n      newSocket.on('file-uploaded', data => {\n        toast.success(`${data.uploadedBy.name} uploaded a file`, {\n          duration: 3000\n        });\n      });\n\n      // Time tracking events\n      newSocket.on('time-tracking-updated', data => {\n        const action = data.action === 'started' ? 'started' : 'stopped';\n        toast.success(`${data.updatedBy.name} ${action} time tracking`, {\n          duration: 3000\n        });\n      });\n\n      // Project events\n      newSocket.on('project-updated', data => {\n        toast.success(`${data.updatedBy.name} updated the project`, {\n          duration: 3000\n        });\n      });\n\n      // Team events\n      newSocket.on('team-updated', data => {\n        const action = data.action === 'added' ? 'added' : 'removed';\n        toast.success(`${data.updatedBy.name} ${action} a team member`, {\n          duration: 3000\n        });\n      });\n\n      // User status events\n      newSocket.on('user-status', data => {\n        if (data.userId !== (user === null || user === void 0 ? void 0 : user._id)) {\n          const status = data.status === 'online' ? 'came online' : 'went offline';\n          toast(`${data.user.name} ${status}`, {\n            duration: 2000,\n            icon: data.status === 'online' ? 'ðŸŸ¢' : 'ðŸ”´'\n          });\n        }\n      });\n\n      // User typing indicator\n      newSocket.on('user-typing', data => {\n        if (data.user.id !== (user === null || user === void 0 ? void 0 : user._id)) {\n          // Handle typing indicator in components\n          console.log(`${data.user.name} is typing...`);\n        }\n      });\n      setSocket(newSocket);\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [isAuthenticated, token, user === null || user === void 0 ? void 0 : user._id]);\n  const joinProject = projectId => {\n    if (socket && connected) {\n      socket.emit('join-project', projectId);\n    }\n  };\n  const leaveProject = projectId => {\n    if (socket && connected) {\n      socket.emit('leave-project', projectId);\n    }\n  };\n  const joinProjects = projectIds => {\n    if (socket && connected) {\n      socket.emit('join-projects', projectIds);\n    }\n  };\n  const emitTaskCreated = (projectId, task) => {\n    if (socket && connected) {\n      socket.emit('task-created', {\n        projectId,\n        task\n      });\n    }\n  };\n  const emitTaskUpdated = (projectId, task, action) => {\n    if (socket && connected) {\n      socket.emit('task-updated', {\n        projectId,\n        task,\n        action\n      });\n    }\n  };\n  const emitTaskDeleted = (projectId, taskId) => {\n    if (socket && connected) {\n      socket.emit('task-deleted', {\n        projectId,\n        taskId\n      });\n    }\n  };\n  const emitTaskMoved = (projectId, taskId, fromStatus, toStatus, position) => {\n    if (socket && connected) {\n      socket.emit('task-moved', {\n        projectId,\n        taskId,\n        fromStatus,\n        toStatus,\n        position\n      });\n    }\n  };\n  const emitCommentAdded = (projectId, taskId, comment) => {\n    if (socket && connected) {\n      socket.emit('comment-added', {\n        projectId,\n        taskId,\n        comment\n      });\n    }\n  };\n  const emitFileUploaded = (projectId, taskId, file) => {\n    if (socket && connected) {\n      socket.emit('file-uploaded', {\n        projectId,\n        taskId,\n        file\n      });\n    }\n  };\n  const emitTimeTrackingUpdated = (projectId, taskId, action, duration) => {\n    if (socket && connected) {\n      socket.emit('time-tracking-updated', {\n        projectId,\n        taskId,\n        action,\n        duration\n      });\n    }\n  };\n  const emitProjectUpdated = (projectId, project, action) => {\n    if (socket && connected) {\n      socket.emit('project-updated', {\n        projectId,\n        project,\n        action\n      });\n    }\n  };\n  const emitTeamUpdated = (projectId, action, member) => {\n    if (socket && connected) {\n      socket.emit('team-updated', {\n        projectId,\n        action,\n        member\n      });\n    }\n  };\n  const emitTypingStart = (projectId, taskId) => {\n    if (socket && connected) {\n      socket.emit('typing-start', {\n        projectId,\n        taskId\n      });\n    }\n  };\n  const emitTypingStop = (projectId, taskId) => {\n    if (socket && connected) {\n      socket.emit('typing-stop', {\n        projectId,\n        taskId\n      });\n    }\n  };\n  const value = {\n    socket,\n    connected,\n    onlineUsers,\n    joinProject,\n    leaveProject,\n    joinProjects,\n    emitTaskCreated,\n    emitTaskUpdated,\n    emitTaskDeleted,\n    emitTaskMoved,\n    emitCommentAdded,\n    emitFileUploaded,\n    emitTimeTrackingUpdated,\n    emitProjectUpdated,\n    emitTeamUpdated,\n    emitTypingStart,\n    emitTypingStop\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"TSUI5l5GEdtKLT4BVIHhs2JPJ14=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","toast","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","user","token","isAuthenticated","socket","setSocket","connected","setConnected","onlineUsers","newSocket","process","env","REACT_APP_SOCKET_URL","auth","transports","on","console","log","emit","error","data","success","createdBy","name","duration","updatedBy","deletedBy","movedBy","toStatus","addedBy","uploadedBy","action","userId","_id","status","icon","id","close","joinProject","projectId","leaveProject","joinProjects","projectIds","emitTaskCreated","task","emitTaskUpdated","emitTaskDeleted","taskId","emitTaskMoved","fromStatus","position","emitCommentAdded","comment","emitFileUploaded","file","emitTimeTrackingUpdated","emitProjectUpdated","project","emitTeamUpdated","member","emitTypingStart","emitTypingStop","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/app/Saas/client/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { useAuth } from './AuthContext';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (!context) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const { user, token, isAuthenticated } = useAuth();\r\n  const [socket, setSocket] = useState(null);\r\n  const [connected, setConnected] = useState(false);\r\n  const [onlineUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated && token && !socket) {\r\n      const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\r\n        auth: {\r\n          token: token\r\n        },\r\n        transports: ['websocket', 'polling']\r\n      });\r\n\r\n      newSocket.on('connect', () => {\r\n        console.log('Socket connected');\r\n        setConnected(true);\r\n        \r\n        // Emit user online status\r\n        newSocket.emit('user-online');\r\n      });\r\n\r\n      newSocket.on('disconnect', () => {\r\n        console.log('Socket disconnected');\r\n        setConnected(false);\r\n      });\r\n\r\n      newSocket.on('connect_error', (error) => {\r\n        console.error('Socket connection error:', error);\r\n        toast.error('Connection error. Please refresh the page.');\r\n      });\r\n\r\n      // Task events\r\n      newSocket.on('task-created', (data) => {\r\n        toast.success(`${data.createdBy.name} created a new task`, {\r\n          duration: 3000,\r\n        });\r\n      });\r\n\r\n      newSocket.on('task-updated', (data) => {\r\n        toast.success(`${data.updatedBy.name} updated a task`, {\r\n          duration: 3000,\r\n        });\r\n      });\r\n\r\n      newSocket.on('task-deleted', (data) => {\r\n        toast.success(`${data.deletedBy.name} deleted a task`, {\r\n          duration: 3000,\r\n        });\r\n      });\r\n\r\n      newSocket.on('task-moved', (data) => {\r\n        toast.success(`${data.movedBy.name} moved a task to ${data.toStatus}`, {\r\n          duration: 3000,\r\n        });\r\n      });\r\n\r\n      // Comment events\r\n      newSocket.on('comment-added', (data) => {\r\n        toast.success(`${data.addedBy.name} added a comment`, {\r\n          duration: 3000,\r\n        });\r\n      });\r\n\r\n      // File events\r\n      newSocket.on('file-uploaded', (data) => {\r\n        toast.success(`${data.uploadedBy.name} uploaded a file`, {\r\n          duration: 3000,\r\n        });\r\n      });\r\n\r\n      // Time tracking events\r\n      newSocket.on('time-tracking-updated', (data) => {\r\n        const action = data.action === 'started' ? 'started' : 'stopped';\r\n        toast.success(`${data.updatedBy.name} ${action} time tracking`, {\r\n          duration: 3000,\r\n        });\r\n      });\r\n\r\n      // Project events\r\n      newSocket.on('project-updated', (data) => {\r\n        toast.success(`${data.updatedBy.name} updated the project`, {\r\n          duration: 3000,\r\n        });\r\n      });\r\n\r\n      // Team events\r\n      newSocket.on('team-updated', (data) => {\r\n        const action = data.action === 'added' ? 'added' : 'removed';\r\n        toast.success(`${data.updatedBy.name} ${action} a team member`, {\r\n          duration: 3000,\r\n        });\r\n      });\r\n\r\n      // User status events\r\n      newSocket.on('user-status', (data) => {\r\n        if (data.userId !== user?._id) {\r\n          const status = data.status === 'online' ? 'came online' : 'went offline';\r\n          toast(`${data.user.name} ${status}`, {\r\n            duration: 2000,\r\n            icon: data.status === 'online' ? 'ðŸŸ¢' : 'ðŸ”´',\r\n          });\r\n        }\r\n      });\r\n\r\n      // User typing indicator\r\n      newSocket.on('user-typing', (data) => {\r\n        if (data.user.id !== user?._id) {\r\n          // Handle typing indicator in components\r\n          console.log(`${data.user.name} is typing...`);\r\n        }\r\n      });\r\n\r\n      setSocket(newSocket);\r\n\r\n      return () => {\r\n        newSocket.close();\r\n      };\r\n    }\r\n  }, [isAuthenticated, token, user?._id]);\r\n\r\n  const joinProject = (projectId) => {\r\n    if (socket && connected) {\r\n      socket.emit('join-project', projectId);\r\n    }\r\n  };\r\n\r\n  const leaveProject = (projectId) => {\r\n    if (socket && connected) {\r\n      socket.emit('leave-project', projectId);\r\n    }\r\n  };\r\n\r\n  const joinProjects = (projectIds) => {\r\n    if (socket && connected) {\r\n      socket.emit('join-projects', projectIds);\r\n    }\r\n  };\r\n\r\n  const emitTaskCreated = (projectId, task) => {\r\n    if (socket && connected) {\r\n      socket.emit('task-created', { projectId, task });\r\n    }\r\n  };\r\n\r\n  const emitTaskUpdated = (projectId, task, action) => {\r\n    if (socket && connected) {\r\n      socket.emit('task-updated', { projectId, task, action });\r\n    }\r\n  };\r\n\r\n  const emitTaskDeleted = (projectId, taskId) => {\r\n    if (socket && connected) {\r\n      socket.emit('task-deleted', { projectId, taskId });\r\n    }\r\n  };\r\n\r\n  const emitTaskMoved = (projectId, taskId, fromStatus, toStatus, position) => {\r\n    if (socket && connected) {\r\n      socket.emit('task-moved', { projectId, taskId, fromStatus, toStatus, position });\r\n    }\r\n  };\r\n\r\n  const emitCommentAdded = (projectId, taskId, comment) => {\r\n    if (socket && connected) {\r\n      socket.emit('comment-added', { projectId, taskId, comment });\r\n    }\r\n  };\r\n\r\n  const emitFileUploaded = (projectId, taskId, file) => {\r\n    if (socket && connected) {\r\n      socket.emit('file-uploaded', { projectId, taskId, file });\r\n    }\r\n  };\r\n\r\n  const emitTimeTrackingUpdated = (projectId, taskId, action, duration) => {\r\n    if (socket && connected) {\r\n      socket.emit('time-tracking-updated', { projectId, taskId, action, duration });\r\n    }\r\n  };\r\n\r\n  const emitProjectUpdated = (projectId, project, action) => {\r\n    if (socket && connected) {\r\n      socket.emit('project-updated', { projectId, project, action });\r\n    }\r\n  };\r\n\r\n  const emitTeamUpdated = (projectId, action, member) => {\r\n    if (socket && connected) {\r\n      socket.emit('team-updated', { projectId, action, member });\r\n    }\r\n  };\r\n\r\n  const emitTypingStart = (projectId, taskId) => {\r\n    if (socket && connected) {\r\n      socket.emit('typing-start', { projectId, taskId });\r\n    }\r\n  };\r\n\r\n  const emitTypingStop = (projectId, taskId) => {\r\n    if (socket && connected) {\r\n      socket.emit('typing-stop', { projectId, taskId });\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    socket,\r\n    connected,\r\n    onlineUsers,\r\n    joinProject,\r\n    leaveProject,\r\n    joinProjects,\r\n    emitTaskCreated,\r\n    emitTaskUpdated,\r\n    emitTaskDeleted,\r\n    emitTaskMoved,\r\n    emitCommentAdded,\r\n    emitFileUploaded,\r\n    emitTimeTrackingUpdated,\r\n    emitProjectUpdated,\r\n    emitTeamUpdated,\r\n    emitTypingStart,\r\n    emitTypingStop,\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}