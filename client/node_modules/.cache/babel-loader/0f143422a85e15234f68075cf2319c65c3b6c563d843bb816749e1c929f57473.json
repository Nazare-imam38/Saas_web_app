{"ast":null,"code":"var _jsxFileName = \"D:\\\\app\\\\Saas\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../config/axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await api.get('/auth/me');\n          setUser(response.data.data.user);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      console.log('🔍 AuthContext: Attempting login with:', {\n        email,\n        password: '***'\n      });\n      console.log('🔍 AuthContext: API base URL:', api.defaults.baseURL);\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      console.log('🔍 AuthContext: Login response:', response.data);\n      const {\n        user: userData,\n        token: authToken\n      } = response.data.data;\n      setUser(userData);\n      setToken(authToken);\n      localStorage.setItem('token', authToken);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response3$data;\n      console.error('❌ AuthContext: Login error:', error);\n      console.error('❌ AuthContext: Error response:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      console.error('❌ AuthContext: Error status:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status);\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      console.log('🔍 AuthContext: Attempting registration with:', userData);\n      console.log('🔍 AuthContext: API base URL:', api.defaults.baseURL);\n      const response = await api.post('/auth/register', userData);\n      console.log('🔍 AuthContext: Registration response:', response.data);\n      const {\n        user: newUser,\n        token: authToken\n      } = response.data.data;\n      setUser(newUser);\n      setToken(authToken);\n      localStorage.setItem('token', authToken);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response5, _error$response6, _error$response6$data;\n      console.error('❌ AuthContext: Registration error:', error);\n      console.error('❌ AuthContext: Error response:', (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n      console.error('❌ AuthContext: Error status:', (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status);\n      const message = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await api.put('/auth/profile', profileData);\n      setUser(response.data.data.user);\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      const message = ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await api.put('/auth/password', {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      const message = ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Password change failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const forgotPassword = async email => {\n    try {\n      await api.post('/auth/forgot-password', {\n        email\n      });\n      toast.success('Password reset email sent!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response9, _error$response9$data;\n      const message = ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Password reset failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const resetPassword = async (token, newPassword) => {\n    try {\n      await api.post('/auth/reset-password', {\n        token,\n        newPassword\n      });\n      toast.success('Password reset successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response0, _error$response0$data;\n      const message = ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || 'Password reset failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    token,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    forgotPassword,\n    resetPassword,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin',\n    isManager: (user === null || user === void 0 ? void 0 : user.role) === 'manager' || (user === null || user === void 0 ? void 0 : user.role) === 'admin'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"V8bE6DZSV5/nB2UMC4Uofie15PA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","checkAuth","response","get","data","error","console","logout","login","email","password","log","baseURL","post","userData","authToken","setItem","success","_error$response","_error$response2","_error$response3","_error$response3$data","status","message","register","newUser","_error$response4","_error$response5","_error$response6","_error$response6$data","removeItem","updateProfile","profileData","put","_error$response7","_error$response7$data","changePassword","currentPassword","newPassword","_error$response8","_error$response8$data","forgotPassword","_error$response9","_error$response9$data","resetPassword","_error$response0","_error$response0$data","value","isAuthenticated","isAdmin","role","isManager","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/app/Saas/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../config/axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  // Configure axios defaults\r\n  useEffect(() => {\r\n    if (token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete api.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [token]);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await api.get('/auth/me');\r\n          setUser(response.data.data.user);\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          logout();\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      console.log('🔍 AuthContext: Attempting login with:', { email, password: '***' });\r\n      console.log('🔍 AuthContext: API base URL:', api.defaults.baseURL);\r\n      \r\n      const response = await api.post('/auth/login', { email, password });\r\n      console.log('🔍 AuthContext: Login response:', response.data);\r\n      \r\n      const { user: userData, token: authToken } = response.data.data;\r\n      \r\n      setUser(userData);\r\n      setToken(authToken);\r\n      localStorage.setItem('token', authToken);\r\n      \r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('❌ AuthContext: Login error:', error);\r\n      console.error('❌ AuthContext: Error response:', error.response?.data);\r\n      console.error('❌ AuthContext: Error status:', error.response?.status);\r\n      \r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      console.log('🔍 AuthContext: Attempting registration with:', userData);\r\n      console.log('🔍 AuthContext: API base URL:', api.defaults.baseURL);\r\n      \r\n      const response = await api.post('/auth/register', userData);\r\n      console.log('🔍 AuthContext: Registration response:', response.data);\r\n      \r\n      const { user: newUser, token: authToken } = response.data.data;\r\n      \r\n      setUser(newUser);\r\n      setToken(authToken);\r\n      localStorage.setItem('token', authToken);\r\n      \r\n      toast.success('Registration successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('❌ AuthContext: Registration error:', error);\r\n      console.error('❌ AuthContext: Error response:', error.response?.data);\r\n      console.error('❌ AuthContext: Error status:', error.response?.status);\r\n      \r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    delete api.defaults.headers.common['Authorization'];\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await api.put('/auth/profile', profileData);\r\n      setUser(response.data.data.user);\r\n      toast.success('Profile updated successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await api.put('/auth/password', { currentPassword, newPassword });\r\n      toast.success('Password changed successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password change failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await api.post('/auth/forgot-password', { email });\r\n      toast.success('Password reset email sent!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password reset failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (token, newPassword) => {\r\n    try {\r\n      await api.post('/auth/reset-password', { token, newPassword });\r\n      toast.success('Password reset successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password reset failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    token,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    forgotPassword,\r\n    resetPassword,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'admin',\r\n    isManager: user?.role === 'manager' || user?.role === 'admin',\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGV,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAACoB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;EAEjE;EACApB,SAAS,CAAC,MAAM;IACd,IAAIiB,KAAK,EAAE;MACThB,GAAG,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUN,KAAK,EAAE;IAClE,CAAC,MAAM;MACL,OAAOhB,GAAG,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACrD;EACF,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;;EAEX;EACAjB,SAAS,CAAC,MAAM;IACd,MAAMwB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIP,KAAK,EAAE;QACT,IAAI;UACF,MAAMQ,QAAQ,GAAG,MAAMxB,GAAG,CAACyB,GAAG,CAAC,UAAU,CAAC;UAC1CZ,OAAO,CAACW,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACd,IAAI,CAAC;QAClC,CAAC,CAAC,OAAOe,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;UAC1CE,MAAM,CAAC,CAAC;QACV;MACF;MACAd,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,MAAMc,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACFJ,OAAO,CAACK,GAAG,CAAC,wCAAwC,EAAE;QAAEF,KAAK;QAAEC,QAAQ,EAAE;MAAM,CAAC,CAAC;MACjFJ,OAAO,CAACK,GAAG,CAAC,+BAA+B,EAAEjC,GAAG,CAACoB,QAAQ,CAACc,OAAO,CAAC;MAElE,MAAMV,QAAQ,GAAG,MAAMxB,GAAG,CAACmC,IAAI,CAAC,aAAa,EAAE;QAAEJ,KAAK;QAAEC;MAAS,CAAC,CAAC;MACnEJ,OAAO,CAACK,GAAG,CAAC,iCAAiC,EAAET,QAAQ,CAACE,IAAI,CAAC;MAE7D,MAAM;QAAEd,IAAI,EAAEwB,QAAQ;QAAEpB,KAAK,EAAEqB;MAAU,CAAC,GAAGb,QAAQ,CAACE,IAAI,CAACA,IAAI;MAE/Db,OAAO,CAACuB,QAAQ,CAAC;MACjBnB,QAAQ,CAACoB,SAAS,CAAC;MACnBnB,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAED,SAAS,CAAC;MAExCpC,KAAK,CAACsC,OAAO,CAAC,mBAAmB,CAAC;MAClC,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAAa,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACdf,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,OAAO,CAACD,KAAK,CAAC,gCAAgC,GAAAa,eAAA,GAAEb,KAAK,CAACH,QAAQ,cAAAgB,eAAA,uBAAdA,eAAA,CAAgBd,IAAI,CAAC;MACrEE,OAAO,CAACD,KAAK,CAAC,8BAA8B,GAAAc,gBAAA,GAAEd,KAAK,CAACH,QAAQ,cAAAiB,gBAAA,uBAAdA,gBAAA,CAAgBG,MAAM,CAAC;MAErE,MAAMC,OAAO,GAAG,EAAAH,gBAAA,GAAAf,KAAK,CAACH,QAAQ,cAAAkB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhB,IAAI,cAAAiB,qBAAA,uBAApBA,qBAAA,CAAsBE,OAAO,KAAI,cAAc;MAC/D5C,KAAK,CAAC0B,KAAK,CAACkB,OAAO,CAAC;MACpB,OAAO;QAAEN,OAAO,EAAE,KAAK;QAAEZ,KAAK,EAAEkB;MAAQ,CAAC;IAC3C;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAOV,QAAQ,IAAK;IACnC,IAAI;MACFR,OAAO,CAACK,GAAG,CAAC,+CAA+C,EAAEG,QAAQ,CAAC;MACtER,OAAO,CAACK,GAAG,CAAC,+BAA+B,EAAEjC,GAAG,CAACoB,QAAQ,CAACc,OAAO,CAAC;MAElE,MAAMV,QAAQ,GAAG,MAAMxB,GAAG,CAACmC,IAAI,CAAC,gBAAgB,EAAEC,QAAQ,CAAC;MAC3DR,OAAO,CAACK,GAAG,CAAC,wCAAwC,EAAET,QAAQ,CAACE,IAAI,CAAC;MAEpE,MAAM;QAAEd,IAAI,EAAEmC,OAAO;QAAE/B,KAAK,EAAEqB;MAAU,CAAC,GAAGb,QAAQ,CAACE,IAAI,CAACA,IAAI;MAE9Db,OAAO,CAACkC,OAAO,CAAC;MAChB9B,QAAQ,CAACoB,SAAS,CAAC;MACnBnB,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAED,SAAS,CAAC;MAExCpC,KAAK,CAACsC,OAAO,CAAC,0BAA0B,CAAC;MACzC,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAAqB,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACdvB,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1DC,OAAO,CAACD,KAAK,CAAC,gCAAgC,GAAAqB,gBAAA,GAAErB,KAAK,CAACH,QAAQ,cAAAwB,gBAAA,uBAAdA,gBAAA,CAAgBtB,IAAI,CAAC;MACrEE,OAAO,CAACD,KAAK,CAAC,8BAA8B,GAAAsB,gBAAA,GAAEtB,KAAK,CAACH,QAAQ,cAAAyB,gBAAA,uBAAdA,gBAAA,CAAgBL,MAAM,CAAC;MAErE,MAAMC,OAAO,GAAG,EAAAK,gBAAA,GAAAvB,KAAK,CAACH,QAAQ,cAAA0B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBxB,IAAI,cAAAyB,qBAAA,uBAApBA,qBAAA,CAAsBN,OAAO,KAAI,qBAAqB;MACtE5C,KAAK,CAAC0B,KAAK,CAACkB,OAAO,CAAC;MACpB,OAAO;QAAEN,OAAO,EAAE,KAAK;QAAEZ,KAAK,EAAEkB;MAAQ,CAAC;IAC3C;EACF,CAAC;EAED,MAAMhB,MAAM,GAAGA,CAAA,KAAM;IACnBhB,OAAO,CAAC,IAAI,CAAC;IACbI,QAAQ,CAAC,IAAI,CAAC;IACdC,YAAY,CAACkC,UAAU,CAAC,OAAO,CAAC;IAChC,OAAOpD,GAAG,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACnDrB,KAAK,CAACsC,OAAO,CAAC,yBAAyB,CAAC;EAC1C,CAAC;EAED,MAAMc,aAAa,GAAG,MAAOC,WAAW,IAAK;IAC3C,IAAI;MACF,MAAM9B,QAAQ,GAAG,MAAMxB,GAAG,CAACuD,GAAG,CAAC,eAAe,EAAED,WAAW,CAAC;MAC5DzC,OAAO,CAACW,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACd,IAAI,CAAC;MAChCX,KAAK,CAACsC,OAAO,CAAC,+BAA+B,CAAC;MAC9C,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAA6B,gBAAA,EAAAC,qBAAA;MACd,MAAMZ,OAAO,GAAG,EAAAW,gBAAA,GAAA7B,KAAK,CAACH,QAAQ,cAAAgC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB9B,IAAI,cAAA+B,qBAAA,uBAApBA,qBAAA,CAAsBZ,OAAO,KAAI,uBAAuB;MACxE5C,KAAK,CAAC0B,KAAK,CAACkB,OAAO,CAAC;MACpB,OAAO;QAAEN,OAAO,EAAE,KAAK;QAAEZ,KAAK,EAAEkB;MAAQ,CAAC;IAC3C;EACF,CAAC;EAED,MAAMa,cAAc,GAAG,MAAAA,CAAOC,eAAe,EAAEC,WAAW,KAAK;IAC7D,IAAI;MACF,MAAM5D,GAAG,CAACuD,GAAG,CAAC,gBAAgB,EAAE;QAAEI,eAAe;QAAEC;MAAY,CAAC,CAAC;MACjE3D,KAAK,CAACsC,OAAO,CAAC,gCAAgC,CAAC;MAC/C,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAAkC,gBAAA,EAAAC,qBAAA;MACd,MAAMjB,OAAO,GAAG,EAAAgB,gBAAA,GAAAlC,KAAK,CAACH,QAAQ,cAAAqC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBnC,IAAI,cAAAoC,qBAAA,uBAApBA,qBAAA,CAAsBjB,OAAO,KAAI,wBAAwB;MACzE5C,KAAK,CAAC0B,KAAK,CAACkB,OAAO,CAAC;MACpB,OAAO;QAAEN,OAAO,EAAE,KAAK;QAAEZ,KAAK,EAAEkB;MAAQ,CAAC;IAC3C;EACF,CAAC;EAED,MAAMkB,cAAc,GAAG,MAAOhC,KAAK,IAAK;IACtC,IAAI;MACF,MAAM/B,GAAG,CAACmC,IAAI,CAAC,uBAAuB,EAAE;QAAEJ;MAAM,CAAC,CAAC;MAClD9B,KAAK,CAACsC,OAAO,CAAC,4BAA4B,CAAC;MAC3C,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAAqC,gBAAA,EAAAC,qBAAA;MACd,MAAMpB,OAAO,GAAG,EAAAmB,gBAAA,GAAArC,KAAK,CAACH,QAAQ,cAAAwC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBtC,IAAI,cAAAuC,qBAAA,uBAApBA,qBAAA,CAAsBpB,OAAO,KAAI,uBAAuB;MACxE5C,KAAK,CAAC0B,KAAK,CAACkB,OAAO,CAAC;MACpB,OAAO;QAAEN,OAAO,EAAE,KAAK;QAAEZ,KAAK,EAAEkB;MAAQ,CAAC;IAC3C;EACF,CAAC;EAED,MAAMqB,aAAa,GAAG,MAAAA,CAAOlD,KAAK,EAAE4C,WAAW,KAAK;IAClD,IAAI;MACF,MAAM5D,GAAG,CAACmC,IAAI,CAAC,sBAAsB,EAAE;QAAEnB,KAAK;QAAE4C;MAAY,CAAC,CAAC;MAC9D3D,KAAK,CAACsC,OAAO,CAAC,8BAA8B,CAAC;MAC7C,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAAwC,gBAAA,EAAAC,qBAAA;MACd,MAAMvB,OAAO,GAAG,EAAAsB,gBAAA,GAAAxC,KAAK,CAACH,QAAQ,cAAA2C,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBzC,IAAI,cAAA0C,qBAAA,uBAApBA,qBAAA,CAAsBvB,OAAO,KAAI,uBAAuB;MACxE5C,KAAK,CAAC0B,KAAK,CAACkB,OAAO,CAAC;MACpB,OAAO;QAAEN,OAAO,EAAE,KAAK;QAAEZ,KAAK,EAAEkB;MAAQ,CAAC;IAC3C;EACF,CAAC;EAED,MAAMwB,KAAK,GAAG;IACZzD,IAAI;IACJE,OAAO;IACPE,KAAK;IACLc,KAAK;IACLgB,QAAQ;IACRjB,MAAM;IACNwB,aAAa;IACbK,cAAc;IACdK,cAAc;IACdG,aAAa;IACbI,eAAe,EAAE,CAAC,CAAC1D,IAAI;IACvB2D,OAAO,EAAE,CAAA3D,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE4D,IAAI,MAAK,OAAO;IAC/BC,SAAS,EAAE,CAAA7D,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE4D,IAAI,MAAK,SAAS,IAAI,CAAA5D,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE4D,IAAI,MAAK;EACxD,CAAC;EAED,oBACErE,OAAA,CAACC,WAAW,CAACsE,QAAQ;IAACL,KAAK,EAAEA,KAAM;IAAA3D,QAAA,EAChCA;EAAQ;IAAAiE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnE,GAAA,CApKWF,YAAY;AAAAsE,EAAA,GAAZtE,YAAY;AAAA,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}